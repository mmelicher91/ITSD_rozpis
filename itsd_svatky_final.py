{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOJCGHjU34ajCi6m0NW67wb",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mmelicher91/ITSD_rozpis/blob/main/itsd_svatky_final.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o49JIVjO__Zd",
        "outputId": "f4d8b236-afc4-4dbe-ba5d-36a8aa6b12f6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Zadej rok: 2023\n",
            "Zadej měsíc: 5\n",
            "+++ Nabídka kódů: ['ŠTO', 'LAN', 'PAL', 'ITIN'] +++\n",
            "Zadej poslední odpolední službu: lan\n",
            "Zadej poslední pohotovost: što\n",
            "\n",
            "Vyber akci: 0 - Grafický výstup | 1 - Export do excelu | 2 - Textový výstup | 9 - Ukončit program \n",
            " >> 2\n",
            "|----|------|------|--|------|----|\n",
            "|  1 |      |      |  | LAN  | sv |\n",
            "|  2 | LAN  | ŠTO  |  | LAN  |    |\n",
            "|  3 | ITIN | PAL  |  | LAN  |    |\n",
            "|  4 | ŠTO  | LAN  |  | LAN  |    |\n",
            "|  5 | PAL  | ITIN |  | LAN  |    |\n",
            "|  6 |      |      |  | LAN  |    |\n",
            "|  7 |      |      |  | LAN  |    |\n",
            "|  8 |      |      |  | PAL  | sv |\n",
            "|  9 | ITIN | PAL  |  | PAL  |    |\n",
            "| 10 | ŠTO  | LAN  |  | PAL  |    |\n",
            "| 11 | PAL  | ITIN |  | PAL  |    |\n",
            "| 12 | LAN  | ŠTO  |  | PAL  |    |\n",
            "| 13 |      |      |  | PAL  |    |\n",
            "| 14 |      |      |  | PAL  |    |\n",
            "| 15 | ITIN | PAL  |  | ITIN |    |\n",
            "| 16 | ŠTO  | LAN  |  | ITIN |    |\n",
            "| 17 | PAL  | ITIN |  | ITIN |    |\n",
            "| 18 | LAN  | ŠTO  |  | ITIN |    |\n",
            "| 19 | ITIN | PAL  |  | ITIN |    |\n",
            "| 20 |      |      |  | ITIN |    |\n",
            "| 21 |      |      |  | ITIN |    |\n",
            "| 22 | ŠTO  | LAN  |  | ŠTO  |    |\n",
            "| 23 | PAL  | ITIN |  | ŠTO  |    |\n",
            "| 24 | LAN  | ŠTO  |  | ŠTO  |    |\n",
            "| 25 | ITIN | PAL  |  | ŠTO  |    |\n",
            "| 26 | ŠTO  | LAN  |  | ŠTO  |    |\n",
            "| 27 |      |      |  | ŠTO  |    |\n",
            "| 28 |      |      |  | ŠTO  |    |\n",
            "| 29 | PAL  | ITIN |  | LAN  |    |\n",
            "| 30 | LAN  | ŠTO  |  | LAN  |    |\n",
            "| 31 | ITIN | PAL  |  | LAN  |    |\n",
            "\n",
            "Vyber akci: 0 - Grafický výstup | 1 - Export do excelu | 2 - Textový výstup | 9 - Ukončit program \n",
            " >> 6\n",
            "\n",
            "Ukončuji program...\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import calendar\n",
        "from tabulate import tabulate\n",
        "\n",
        "###################### Svátky 2023: [měsíc, den] ###############################\n",
        "svatky=[[1,1],[5,1],[5,8],[7,5],[7,6],[9,28], \n",
        "        [10,28],[11,17],[12,24],[12,25],[12,26],\n",
        "        [4,7],[4,10]] # <-- velikonoce 7.4.2023 a 10.4.2023\n",
        "\n",
        "######################### Nastavení osob #######################################\n",
        "barveni = {\"LAN\":\"#ddd9c4\",\"ŠTO\":\"#92cddc\",\"PAL\":\"#c4d79b\",\"ITIN\":\"#e26b0a\"}\n",
        "\n",
        "osoby = [[\"ŠTO\",\"#92cddc\",0],\n",
        "         [\"LAN\",\"#ddd9c4\",1],\n",
        "         [\"PAL\",\"#c4d79b\",2],\n",
        "         [\"ITIN\",\"#e26b0a\",3]]     \n",
        "\n",
        "########################### Statická data ######################################\n",
        "dny_v_tydnu= (\"Po \",\"Út \",\"St \",\"Čt \",\"Pá \",\"So \",\"Ne \")\n",
        "nazvy_mesicu =(\"Leden\",\"Únor\",\"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\")\n",
        "nadpis = (\"DEN\",\"RANO\",\"ODPO\",\" \",\"POH\",\"   \")\n",
        "\n",
        "\n",
        "################################################################################\n",
        "################################# Clovek #######################################\n",
        "################################################################################\n",
        "\n",
        "class Clovek():\n",
        "  # Generuje předchůdce a následovníka, rozlišuje lichý vs sudý počet osob\n",
        "  def __init__(self,p):\n",
        "    self.index=p\n",
        "    self.znacka=osoby[p][0]\n",
        "    self.barva=osoby[p][1]\n",
        "    # Podmínka: LICHÝ vs SUDÝ počet osob\n",
        "    if len(osoby)%2==0:\n",
        "      if p%2==0: \n",
        "        # Sudý řádky posunu o +1 hodnotu vpřed\n",
        "        self.predchudce=osoby[p-len(osoby)+1][0]\n",
        "        # Podmínka: NASLEDUJICI: poslední sudý řádek se odkáže na začátek osoby[index=0]\n",
        "        if len(osoby)-2==p:  \n",
        "          self.nasledujici=osoby[len(osoby)-p-2][0]\n",
        "        else: \n",
        "          # Není poslední sudý řádek .. skáču o +3 indexy\n",
        "          self.nasledujici=osoby[p+3-len(osoby)][0]      \n",
        "      else: \n",
        "        # Lichý řádky: Posunu se o -1 hodnotu zpět\n",
        "        self.predchudce=osoby[p-len(osoby)-1][0]\n",
        "        # Podmínka: NASLEDUJICI: poslední lichý řádek se odkáže na první lichý záznam (tj. začátek osoby[index=1])\n",
        "        if len(osoby)-1==p: \n",
        "          self.nasledujici=osoby[len(osoby)-p][0]\n",
        "        else:\n",
        "          self.nasledujici=osoby[p+1-len(osoby)][0]\n",
        "    else: \n",
        "      # Lichý počet osob: řazení je automatické, netřeba ošetřovat\n",
        "      self.predchudce=osoby[p-1][0]\n",
        "      self.nasledujici=osoby[p-len(osoby)+1][0]\n",
        "\n",
        "################################################################################\n",
        "################################# Rozpis #######################################\n",
        "################################################################################\n",
        "\n",
        "class Rozpis:\n",
        "  def __init__(self,p):\n",
        "    self.index=p\n",
        "    self.rok=rok\n",
        "    self.mesic=p+1\n",
        "    self.nazev=nazvy_mesicu[p]\n",
        "    kal = calendar.monthrange(self.rok,self.mesic)\n",
        "    self.prvni_den = kal[0]\n",
        "    self.jmeno_dne = dny_v_tydnu[self.prvni_den]\n",
        "    self.delka_dnu = kal[1]\n",
        "    \n",
        "    pocet=[]\n",
        "    for _ in range(self.delka_dnu):\n",
        "      pocet.append(_+1)\n",
        "    self.pocet=pocet\n",
        "\n",
        "    self.matice= np.zeros((self.delka_dnu,6),dtype=object)\n",
        "    \n",
        "    for k in range(len(svatky)):\n",
        "      if svatky[k][0] == self.mesic:\n",
        "        for jk in range(self.delka_dnu):\n",
        "          if svatky[k][1] == self.pocet[jk]:\n",
        "            self.matice[jk,1]=\"X\"\n",
        "            self.matice[jk,2]=\"X\"\n",
        " \n",
        "################################################################################ \n",
        "\n",
        "def rozpis_dnu(den,poc,posledni,poho):\n",
        "  poradi=1 # rozhoduje o použití PREDCHUDCE (poradi=-1) x NASLEDOVNIK (poradi=1)\n",
        "  for k in range(len(osoby)):\n",
        "    if poho == osoby[k][0]:\n",
        "    #Pokud poslední POHO v měsíci je neděle, tak posune o index dál\n",
        "      if (k == len(osoby)-1) and (den==0):\n",
        "        idx=0\n",
        "        break\n",
        "      elif (k == len(osoby)-1):\n",
        "        idx=0\n",
        "      else:\n",
        "        idx=k+1\n",
        "\n",
        "  for i in range(poc):\n",
        "    for j in range(2):\n",
        "      mesic[x].matice[i,0]=i+1 #dny_v_tydnu[den] <-- vypsání dnů\n",
        "      if (5 <= den <= 6):\n",
        "        mesic[x].matice[i,j+1]=\"\" # So/Ne Ráno/Odpo\n",
        "        mesic[x].matice[i,5]=\"\" # prázdný sloupec\n",
        "      else:\n",
        "        posledni=predej(posledni,poradi)\n",
        "        if mesic[x].matice[i,j+1]==\"X\":\n",
        "          mesic[x].matice[i,j+1]=\"\"\n",
        "          mesic[x].matice[i,5]=\"sv\"          \n",
        "        else:\n",
        "          mesic[x].matice[i,j+1]=posledni\n",
        "          mesic[x].matice[i,5]=\"\"\n",
        "          # poradi se meni pouze u sudych osob\n",
        "        if len(osoby)%2==0:\n",
        "          poradi*=-1\n",
        "    \n",
        "    mesic[x].matice[i,4]=osoby[idx][0]\n",
        "    mesic[x].matice[i,3]=\"\" # prázdný sloupec\n",
        "\n",
        "    if den == 6:\n",
        "      den=0\n",
        "      if idx == len(osoby)-1:\n",
        "        idx=0\n",
        "      else:\n",
        "        idx+=1\n",
        "    else:\n",
        "      den+=1\n",
        "\n",
        "def predej(posledni,poradi):\n",
        "  for kl in range(len(osoby)):\n",
        "    if posledni==clovek[kl].znacka:\n",
        "      if poradi==-1:\n",
        "        posledni=clovek[kl].predchudce\n",
        "      else:\n",
        "        posledni=clovek[kl].nasledujici\n",
        "      break  \n",
        "  return posledni\n",
        "\n",
        "############################# Barveni PANDAS ###################################\n",
        "def obarvi(col, pattern_map, default=''):\n",
        "  return np.select(\n",
        "      [col.str.contains(k, na=False) for k in pattern_map.keys()],\n",
        "      [f'background-color: {v}' for v in pattern_map.values()],\n",
        "      default=default, \n",
        "    ).astype(str)\n",
        "################################################################################\n",
        "obj = calendar.Calendar()\n",
        "######################### Vyprázdněný při spuštění #############################\n",
        "mesic=[]\n",
        "clovek=[]\n",
        "pocet=[]\n",
        "y=[]\n",
        "################################################################################\n",
        "rok=int(input(\"Zadej rok: \"))\n",
        "x=int(input(\"Zadej měsíc: \"))-1\n",
        "print(f\"+++ Nabídka kódů: {([osoby[_][0] for _ in range(len(osoby))])} +++\")\n",
        "posledni=input(\"Zadej poslední odpolední službu: \").upper()\n",
        "poho=input(\"Zadej poslední pohotovost: \").upper()\n",
        "\n",
        "\n",
        "for p in range(12):\n",
        "  mesic.append(Rozpis(p))\n",
        " \n",
        "for p in range(len(osoby)):\n",
        "  clvk=Clovek(p)\n",
        "  clovek.append(clvk)\n",
        "\n",
        "#for i in range(len(osoby)):\n",
        "# print(vars(clovek[i]))\n",
        "\n",
        "poc=mesic[x].delka_dnu\n",
        "den=mesic[x].prvni_den\n",
        "data = pd.DataFrame(mesic[x].matice, index=mesic[x].pocet, columns=nadpis)\n",
        "rozpis_dnu(den, poc, posledni,poho)\n",
        "\n",
        "kontrola= True\n",
        "while kontrola == True:\n",
        "  otazka=int(input(\"\\nVyber akci: 0 - Grafický výstup | 1 - Export do excelu | 2 - Textový výstup | 9 - Ukončit program \\n >> \"))\n",
        "  if otazka == 0:\n",
        "    print(f\"{mesic[x].nazev} {mesic[x].rok}\")\n",
        "    display(data.style.apply(obarvi,pattern_map=barveni,subset=[\"RANO\",\"ODPO\",\"POH\"]))\n",
        "    print(\"\\n\")\n",
        "  elif otazka == 1:\n",
        "    data.style.apply(obarvi, pattern_map=barveni, subset=[\"RANO\",\"ODPO\",\"POH\"]).to_excel(\"report.xlsx\",sheet_name=mesic[x].nazev, index=False)\n",
        "  elif otazka == 2:\n",
        "    print(tabulate(mesic[x].matice, tablefmt=\"github\", showindex=\"none\"))\n",
        "  else:\n",
        "    print(\"\\nUkončuji program...\")\n",
        "    break"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "dT0wkDeU9zpm"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}